## Theme
hide_window_decorations yes
enable_audio_bell no

## Font
font_family    FiraCode Nerd Font Mono
bold_font        auto
italic_font      auto
bold_italic_font auto

font_size        14.0

# Use nvim for scrollback
scrollback_pager nvim -c 'setlocal nonumber nolist showtabline=0 foldcolumn=0|Man!' -c "autocmd VimEnter * normal G" -

## Keymaps
include splits.conf
# fat -- One (or optionally more) windows are shown full width on the top, the rest of the windows are shown side-by-side on the bottom
# grid -- All windows are shown in a grid
# horizontal -- All windows are shown side-by-side
# splits -- Windows arranged in arbitrary patterns created using horizontal and vertical splits
# stack -- Only a single maximized window is shown at a time
# tall -- One (or optionally more) windows are shown full height on the left, the rest of the windows are shown one below the other on the right
# vertical -- All windows are shown one below the other

enabled_layouts splits,stack

#: The enabled window layouts. A comma separated list of layout names.
#: The special value all means all layouts. The first listed layout
#: will be used as the startup layout. Default configuration is all
#: layouts in alphabetical order. For a list of available layouts, see
#: the https://sw.kovidgoyal.net/kitty/overview/#layouts.

window_resize_step_cells 2
window_resize_step_lines 2

#: The step size (in units of cell width/cell height) to use when
#: resizing kitty windows in a layout with the keyboard
#: (start_resizing_window). The cells value is used for horizontal
#: resizing and the lines value for vertical resizing.

window_border_width 0.5pt

tab_bar_edge top
tab_bar_style hidden


allow_remote_control yes
#: Allow other programs to control kitty. If you turn this on other
#: programs can control all aspects of kitty, including sending text
#: to kitty windows, opening new windows, closing windows, reading the
#: content of windows, etc.  Note that this even works over ssh
#: connections. You can chose to either allow any program running
#: within kitty to control it, with yes or only programs that connect
#: to the socket specified with the kitty --listen-on command line
#: option, if you use the value socket-only. The latter is useful if
#: you want to prevent programs running on a remote computer over ssh
#: from controlling kitty. Reloading the config will not affect this
#: setting.


allow_hyperlinks yes
#: Process hyperlink (OSC 8) escape sequences. If disabled OSC 8
#: escape sequences are ignored. Otherwise they become clickable
#: links, that you can click by with the mouse or the hints kitten
#: </kittens/hints>. The special value of ``ask`` means that kitty
#: will ask before opening the link when clicked.

shell_integration enabled
#: Enable shell integration on supported shells. This enables features
#: such as jumping to previous prompts, browsing the output of the
#: previous command in a pager, etc. on supported shells.  Set to
#: ``disabled`` to turn off shell integration, completely. See
#: https://sw.kovidgoyal.net/kitty/shell-integration/ for details.
#term xterm-kitty
term xterm-256color


kitty_mod ctrl+shift
# kitty_mod has to be modifiers not keys, see
# https://github.com/kovidgoyal/kitty/discussions/3457#discussioncomment-587511
# so you can NOT do this:
#kitty_mod ctrl+a


#map kitty_mod+enter new_window
# disable this as can lead to window created by accident via press by ctrl+shift+v paste command and then press enter
map kitty_mod+enter no-op
map cmd+enter       no-op
map ctrl+a>x close_window


map kitty_mod+t launch --type=tab
# new_tab will not keep cwd, use `new_tab_with_cwd` instead or `launch --cwd=current --type=tab`
# see https://sw.kovidgoyal.net/kitty/faq/#how-do-i-open-a-new-window-or-tab-with-the-same-working-directory-as-the-current-window
# tmux like tab create via `--cwd=last_reported`, warning: this need kitty `shell_integration enabled`
map ctrl+a>f launch --location=hsplit --allow-remote-control ~/.local/bin/kitty-new-tab
map ctrl+a>s launch --location=hsplit --allow-remote-control ~/.local/bin/kitty-switch-tab


#: Increase font size
map ctrl+equal  change_font_size all +2.0
map ctrl+plus   change_font_size all +2.0
map ctrl+kp_add change_font_size all +2.0


#: Decrease font size
map ctrl+minus       change_font_size all -2.0
map ctrl+kp_subtract change_font_size all -2.0


#: Reset font size
map ctrl+0 change_font_size all 0
map f11 toggle_fullscreen


# map ctrl+a>e edit_config_file
map ctrl+a>e no-op
map ctrl+a>shift+e launch --type=tab nvim ~/.config/kitty/kitty.conf

#: Reload kitty.conf
map ctrl+a>shift+r combine : load_config_file : launch --type=overlay sh -c 'echo "kitty config reloaded."; echo; read -r -p "Press Enter to exit"; echo ""'

#: Debug kitty configuration
map ctrl+a>shift+d     debug_config


# BEGIN_KITTY_THEME
# Gruvbox Material Dark Hard
include current-theme.conf
# END_KITTY_THEME
